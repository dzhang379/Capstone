#BlueJ class context
comment0.params=tetris
comment0.target=Board(Tetris)
comment0.text=\r\n\ Constructor\ for\ the\ Board\r\n\ Starts\ the\ Timer\ at\ an\ interval\ of\ 400\ milliseconds\r\n\ \r\n\ @param\ \ Tetris\ \ object\ which\ holds\ the\ Board\r\n
comment1.params=e
comment1.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment1.text=\r\n\ Action\ to\ be\ performed\ at\ every\ tick\ of\ the\ Timer.\r\n\ curPiece\ descends\ one\ line\ and\ any\ full\ lines\ are\ removed.\r\n
comment10.params=
comment10.target=void\ removeFullLines()
comment10.text=\r\n\ Removes\ all\ full\ lines\r\n\ \r\n@post\ squareCoordinates\ is\ repopulated\ with\ the\ full\ lines\ taken\ out\r\n
comment11.params=g\ x\ y\ color
comment11.target=boolean\ drawSquare(java.awt.Graphics,\ int,\ int,\ int)
comment11.text=\r\n\ Paints\ a\ square\ at\ a\ given\ coordinate\ if\ that\ coordinate\ is\ populated\r\n\r\n@param\ \ Graphics\ \ g\r\n@param\ \ int\ \ x-value\ of\ the\ square\ to\ be\ checked\r\n@param\ \ int\ \ y-value\ of\ the\ square\ to\ be\ checked\r\n@param\ \ int\ \ The\ square's\ color.\ Equals\ 0\ if\ unpopulated\r\n\r\n\r\n@return\ \ boolean\ \ states\ whether\ the\ square\ was\ populated/painted\r\n@post\ the\ appropriate\ square\ is\ painted\ with\ the\ appropriate\ color\r\n
comment12.params=curPiece\ X\ Y
comment12.target=void\ clearPiece(Shape,\ int,\ int)
comment12.text=\r\n\ Removes\ the\ current\ piece\ while\ leaving\ the\ current\ position\ unchanged\r\n\r\n@param\ \ Shape\ \ curPiece\r\n@param\ \ int\ \ x-value\ of\ the\ piece\r\n@param\ \ int\ \ y-value\ of\ the\ piece\r\n\r\n\r\n@post\ removes\ the\ current\ piece\ without\ changing\ curX\ and\ curY\r\n
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Starts\ the\ game\ with\ a\ running\ timer,\ a\ clear\ Board,\ an\ initial\ piece\r\n
comment3.params=g
comment3.target=void\ paint(java.awt.Graphics)
comment3.text=\r\n\ Overrides\ the\ paint\ method\ of\ the\ superclass.\r\n\ Scans\ the\ 3D\ array\ squareCoordinates\ for\ populated\ coordinates\r\n\ and\ draws\ the\ corresponding\ squares.\r\n\ \r\n\ Rows\ of\ squareCoordinates\ are\ the\ x-Values\r\n\ Cols\ of\ squareCoordinates\ are\ the\ y-Values\r\n\ \r\n\ squareCordinates[x][y]\ holds\ the\ type\ of\ the\ shape\ it\ belongs\ to,\r\n\ which\ determines\ its\ color,\ and\ is\ set\ to\ 0\ if\ it\ is\ unpopulated\r\n\ \r\n\ @param\ Graphics\ g\r\n
comment4.params=
comment4.target=void\ dropDown()
comment4.text=\r\n\ Hard\ Drop.\ Continues\ incrementing\ Y\ until\ it\ can\ no\ longer\ be\ incremented\r\n\ Creates\ new\ piece\r\n
comment5.params=
comment5.target=void\ oneLineDown()
comment5.text=\r\n\ Soft\ Drop.\ Creates\ a\ new\ piece\ if\ curPiece\ reaches\ the\ bottom.\r\n
comment6.params=
comment6.target=void\ clearBoard()
comment6.text=\r\n\ Clears\ the\ Board\ of\ all\ squares.\r\n
comment7.params=
comment7.target=void\ newPiece()
comment7.text=\r\n\ Creates\ a\ new\ piece\ if\ possible.\r\n\ If\ not,\ ends\ the\ game.\r\n
comment8.params=curPiece\ rotatedPiece\ prevX\ prevY\ newX\ newY
comment8.target=boolean\ tryRotation(Shape,\ Shape,\ int,\ int,\ int,\ int)
comment8.text=\r\n\ Determines\ if\ the\ given\ rotation\ is\ possible\r\n\r\n@param\ \ Shape\ \ the\ piece\ to\ be\ rotated\r\n@param\ \ int\ \ the\ piece's\ configuration\ post-rotation\r\n@param\ \ int\ \ the\ piece's\ current\ X-value\r\n@param\ \ int\ \ the\ peice's\ current\ Y-value\r\n@param\ \ int\ \ what\ the\ piece's\ X-value\ post-move\r\n@param\ \ int\ \ what\ the\ piece's\ Y-value\ post-move\r\n\r\n\r\n@return\ \ boolean\ \ states\ whether\ the\ given\ rotation\ is\ possible\r\n@post\ repopulates\ squareCoordinates\ if\ successful\ and\ repaints\r\n
comment9.params=curPiece\ prevX\ prevY\ newX\ newY
comment9.target=boolean\ tryMove(Shape,\ int,\ int,\ int,\ int)
comment9.text=\r\n\ Determines\ if\ the\ given\ move\ is\ possible\r\n\r\n@param\ \ Shape\ \ the\ piece\ to\ be\ moved\r\n@param\ \ int\ \ the\ piece's\ current\ X-value\r\n@param\ \ int\ \ the\ peice's\ current\ Y-value\r\n@param\ \ int\ \ what\ the\ piece's\ X-value\ post-move\r\n@param\ \ int\ \ what\ the\ piece's\ Y-value\ post-move\r\n\r\n\r\n@return\ \ boolean\ \ states\ whether\ the\ given\ move\ is\ possible\r\n@post\ repopulates\ squareCoordinates\ if\ successful\ and\ repaints\r\n
numComments=13
